BEGIN;
BEGIN
EXPLAIN
select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate >= date '1993-04-01'
	and o_orderdate < cast(date '1993-04-01' + interval '3 month' as date)
	and l_returnflag = 'R'
	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;
                                                                           QUERY PLAN                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=13747278.89..13747278.94 rows=20 width=175)
   ->  Sort  (cost=13747278.89..13760890.78 rows=5444757 width=175)
         Sort Key: (sum((lineitem.l_extendedprice * ('1'::double precision - lineitem.l_discount)))) DESC
         ->  GroupAggregate  (cost=13398217.47..13602395.86 rows=5444757 width=175)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Sort  (cost=13398217.47..13411829.37 rows=5444757 width=175)
                     Sort Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                     ->  Hash Join  (cost=4359536.96..12323794.68 rows=5444757 width=175)
                           Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                           ->  Hash Join  (cost=4359535.40..12248927.71 rows=5444757 width=153)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 ->  Merge Join  (cost=3347005.19..10690810.85 rows=5444757 width=12)
                                       Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                       ->  Sort  (cost=3346300.24..3359980.61 rows=5472148 width=8)
                                             Sort Key: orders.o_orderkey
                                             ->  Bitmap Heap Scan on orders  (cost=116382.09..2733866.31 rows=5472148 width=8)
                                                   Recheck Cond: ((o_orderdate >= '1993-04-01'::date) AND (o_orderdate < '1993-07-01'::date))
                                                   ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..115014.05 rows=5472148 width=0)
                                                         Index Cond: ((o_orderdate >= '1993-04-01'::date) AND (o_orderdate < '1993-07-01'::date))
                                       ->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.57..6889498.98 rows=149398317 width=12)
                                 ->  Hash  (cost=502764.09..502764.09 rows=15000009 width=145)
                                       ->  Seq Scan on customer  (cost=0.00..502764.09 rows=15000009 width=145)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(24 rows)

COMMIT;
COMMIT
